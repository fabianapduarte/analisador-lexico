Terminals unused in grammar

    IF
    ELIF
    ELSE
    SWITCH
    CASE
    DEFAULT
    BREAK
    CONTINUE
    RETURN
    PRINT
    PARSEINT
    PARSEFLOAT
    PARSECHAR
    PARSESTRING
    OR
    AND
    NOT
    EQUAL
    DIFFERENCE
    GREATER_THAN
    GREATER_THAN_OR_EQUAL
    LESS_THAN
    LESS_THAN_OR_EQUAL


Grammar

    0 $accept: program $end

    1 program: subpgrms body

    2 subpgrms: ε
    3         | subpgrm body

    4 subpgrm: function
    5        | decl_var
    6        | decl_const
    7        | decl_global
    8        | assign
    9        | loop

   10 decl_var: TYPE ID ASSIGN expr

   11 decl_const: CONST TYPE ID ASSIGN expr

   12 decl_global: GLOBAL TYPE ID ASSIGN expr

   13 function: TYPE FUNC ID '(' args ')' '{' body '}'

   14 args: ε
   15     | args_aux

   16 args_aux: TYPE ID
   17         | TYPE ID ',' args_aux

   18 body: ε

   19 assign: ID ASSIGN expr

   20 expr: term SUM expr
   21     | term SUBTRACTION expr
   22     | term

   23 term: factor MULTIPLICATION term
   24     | factor DIVISION term
   25     | factor REST term
   26     | factor POWER term
   27     | factor

   28 factor: '(' expr ')'
   29       | expr_incr_decr
   30       | ID
   31       | LITERAL

   32 expr_incr_decr: ID INCREMENT
   33               | ID DECREMENT
   34               | INCREMENT ID
   35               | DECREMENT ID

   36 loop: for
   37     | while
   38     | do_while

   39 for: FOR '(' decl_var ';' expr ';' expr_incr_decr ')' '{' subpgrms '}'

   40 while: WHILE '(' expr ')' '{' subpgrms '}'

   41 do_while: DO '{' subpgrms '}' WHILE '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 13 28 39 40 41
    ')' (41) 13 28 39 40 41
    ',' (44) 17
    ';' (59) 39
    '{' (123) 13 39 40 41
    '}' (125) 13 39 40 41
    error (256)
    TYPE <type> (258) 10 11 12 13 16 17
    ID <sValue> (259) 10 11 12 13 16 17 19 30 32 33 34 35
    GLOBAL <sValue> (260) 12
    CONST <sValue> (261) 11
    ASSIGN <sValue> (262) 10 11 12 19
    LITERAL <sValue> (263) 31
    FOR <sValue> (264) 39
    WHILE <sValue> (265) 40 41
    DO <sValue> (266) 41
    IF <sValue> (267)
    ELIF <sValue> (268)
    ELSE <sValue> (269)
    SWITCH <sValue> (270)
    CASE <sValue> (271)
    DEFAULT <sValue> (272)
    BREAK <sValue> (273)
    CONTINUE <sValue> (274)
    FUNC <sValue> (275) 13
    RETURN <sValue> (276)
    PRINT <sValue> (277)
    PARSEINT <sValue> (278)
    PARSEFLOAT <sValue> (279)
    PARSECHAR <sValue> (280)
    PARSESTRING <sValue> (281)
    OR <sValue> (282)
    AND <sValue> (283)
    NOT <sValue> (284)
    EQUAL <sValue> (285)
    DIFFERENCE <sValue> (286)
    GREATER_THAN <sValue> (287)
    GREATER_THAN_OR_EQUAL <sValue> (288)
    LESS_THAN <sValue> (289)
    LESS_THAN_OR_EQUAL <sValue> (290)
    SUM <sValue> (291) 20
    INCREMENT <sValue> (292) 32 34
    SUBTRACTION <sValue> (293) 21
    DECREMENT <sValue> (294) 33 35
    MULTIPLICATION <sValue> (295) 23
    POWER <sValue> (296) 26
    DIVISION <sValue> (297) 24
    REST <sValue> (298) 25


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 1
        on right: 0
    subpgrms <sValue> (52)
        on left: 2 3
        on right: 1 39 40 41
    subpgrm <sValue> (53)
        on left: 4 5 6 7 8 9
        on right: 3
    decl_var <sValue> (54)
        on left: 10
        on right: 5 39
    decl_const <sValue> (55)
        on left: 11
        on right: 6
    decl_global <sValue> (56)
        on left: 12
        on right: 7
    function <sValue> (57)
        on left: 13
        on right: 4
    args <sValue> (58)
        on left: 14 15
        on right: 13
    args_aux <sValue> (59)
        on left: 16 17
        on right: 15 17
    body <sValue> (60)
        on left: 18
        on right: 1 3 13
    assign <sValue> (61)
        on left: 19
        on right: 8
    expr <sValue> (62)
        on left: 20 21 22
        on right: 10 11 12 19 20 21 28 39 40 41
    term <sValue> (63)
        on left: 23 24 25 26 27
        on right: 20 21 22 23 24 25 26
    factor <sValue> (64)
        on left: 28 29 30 31
        on right: 23 24 25 26 27
    expr_incr_decr <sValue> (65)
        on left: 32 33 34 35
        on right: 29 39
    loop <sValue> (66)
        on left: 36 37 38
        on right: 9
    for <sValue> (67)
        on left: 39
        on right: 36
    while <sValue> (68)
        on left: 40
        on right: 37
    do_while <sValue> (69)
        on left: 41
        on right: 38


State 0

    0 $accept: • program $end

    TYPE    shift, and go to state 1
    ID      shift, and go to state 2
    GLOBAL  shift, and go to state 3
    CONST   shift, and go to state 4
    FOR     shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7

    $default  reduce using rule 2 (subpgrms)

    program      go to state 8
    subpgrms     go to state 9
    subpgrm      go to state 10
    decl_var     go to state 11
    decl_const   go to state 12
    decl_global  go to state 13
    function     go to state 14
    assign       go to state 15
    loop         go to state 16
    for          go to state 17
    while        go to state 18
    do_while     go to state 19


State 1

   10 decl_var: TYPE • ID ASSIGN expr
   13 function: TYPE • FUNC ID '(' args ')' '{' body '}'

    ID    shift, and go to state 20
    FUNC  shift, and go to state 21


State 2

   19 assign: ID • ASSIGN expr

    ASSIGN  shift, and go to state 22


State 3

   12 decl_global: GLOBAL • TYPE ID ASSIGN expr

    TYPE  shift, and go to state 23


State 4

   11 decl_const: CONST • TYPE ID ASSIGN expr

    TYPE  shift, and go to state 24


State 5

   39 for: FOR • '(' decl_var ';' expr ';' expr_incr_decr ')' '{' subpgrms '}'

    '('  shift, and go to state 25


State 6

   40 while: WHILE • '(' expr ')' '{' subpgrms '}'

    '('  shift, and go to state 26


State 7

   41 do_while: DO • '{' subpgrms '}' WHILE '(' expr ')'

    '{'  shift, and go to state 27


State 8

    0 $accept: program • $end

    $end  shift, and go to state 28


State 9

    1 program: subpgrms • body

    $default  reduce using rule 18 (body)

    body  go to state 29


State 10

    3 subpgrms: subpgrm • body

    $default  reduce using rule 18 (body)

    body  go to state 30


State 11

    5 subpgrm: decl_var •

    $default  reduce using rule 5 (subpgrm)


State 12

    6 subpgrm: decl_const •

    $default  reduce using rule 6 (subpgrm)


State 13

    7 subpgrm: decl_global •

    $default  reduce using rule 7 (subpgrm)


State 14

    4 subpgrm: function •

    $default  reduce using rule 4 (subpgrm)


State 15

    8 subpgrm: assign •

    $default  reduce using rule 8 (subpgrm)


State 16

    9 subpgrm: loop •

    $default  reduce using rule 9 (subpgrm)


State 17

   36 loop: for •

    $default  reduce using rule 36 (loop)


State 18

   37 loop: while •

    $default  reduce using rule 37 (loop)


State 19

   38 loop: do_while •

    $default  reduce using rule 38 (loop)


State 20

   10 decl_var: TYPE ID • ASSIGN expr

    ASSIGN  shift, and go to state 31


State 21

   13 function: TYPE FUNC • ID '(' args ')' '{' body '}'

    ID  shift, and go to state 32


State 22

   19 assign: ID ASSIGN • expr

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    expr            go to state 38
    term            go to state 39
    factor          go to state 40
    expr_incr_decr  go to state 41


State 23

   12 decl_global: GLOBAL TYPE • ID ASSIGN expr

    ID  shift, and go to state 42


State 24

   11 decl_const: CONST TYPE • ID ASSIGN expr

    ID  shift, and go to state 43


State 25

   39 for: FOR '(' • decl_var ';' expr ';' expr_incr_decr ')' '{' subpgrms '}'

    TYPE  shift, and go to state 44

    decl_var  go to state 45


State 26

   40 while: WHILE '(' • expr ')' '{' subpgrms '}'

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    expr            go to state 46
    term            go to state 39
    factor          go to state 40
    expr_incr_decr  go to state 41


State 27

   41 do_while: DO '{' • subpgrms '}' WHILE '(' expr ')'

    TYPE    shift, and go to state 1
    ID      shift, and go to state 2
    GLOBAL  shift, and go to state 3
    CONST   shift, and go to state 4
    FOR     shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7

    $default  reduce using rule 2 (subpgrms)

    subpgrms     go to state 47
    subpgrm      go to state 10
    decl_var     go to state 11
    decl_const   go to state 12
    decl_global  go to state 13
    function     go to state 14
    assign       go to state 15
    loop         go to state 16
    for          go to state 17
    while        go to state 18
    do_while     go to state 19


State 28

    0 $accept: program $end •

    $default  accept


State 29

    1 program: subpgrms body •

    $default  reduce using rule 1 (program)


State 30

    3 subpgrms: subpgrm body •

    $default  reduce using rule 3 (subpgrms)


State 31

   10 decl_var: TYPE ID ASSIGN • expr

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    expr            go to state 48
    term            go to state 39
    factor          go to state 40
    expr_incr_decr  go to state 41


State 32

   13 function: TYPE FUNC ID • '(' args ')' '{' body '}'

    '('  shift, and go to state 49


State 33

   30 factor: ID •
   32 expr_incr_decr: ID • INCREMENT
   33               | ID • DECREMENT

    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51

    $default  reduce using rule 30 (factor)


State 34

   31 factor: LITERAL •

    $default  reduce using rule 31 (factor)


State 35

   34 expr_incr_decr: INCREMENT • ID

    ID  shift, and go to state 52


State 36

   35 expr_incr_decr: DECREMENT • ID

    ID  shift, and go to state 53


State 37

   28 factor: '(' • expr ')'

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    expr            go to state 54
    term            go to state 39
    factor          go to state 40
    expr_incr_decr  go to state 41


State 38

   19 assign: ID ASSIGN expr •

    $default  reduce using rule 19 (assign)


State 39

   20 expr: term • SUM expr
   21     | term • SUBTRACTION expr
   22     | term •

    SUM          shift, and go to state 55
    SUBTRACTION  shift, and go to state 56

    $default  reduce using rule 22 (expr)


State 40

   23 term: factor • MULTIPLICATION term
   24     | factor • DIVISION term
   25     | factor • REST term
   26     | factor • POWER term
   27     | factor •

    MULTIPLICATION  shift, and go to state 57
    POWER           shift, and go to state 58
    DIVISION        shift, and go to state 59
    REST            shift, and go to state 60

    $default  reduce using rule 27 (term)


State 41

   29 factor: expr_incr_decr •

    $default  reduce using rule 29 (factor)


State 42

   12 decl_global: GLOBAL TYPE ID • ASSIGN expr

    ASSIGN  shift, and go to state 61


State 43

   11 decl_const: CONST TYPE ID • ASSIGN expr

    ASSIGN  shift, and go to state 62


State 44

   10 decl_var: TYPE • ID ASSIGN expr

    ID  shift, and go to state 20


State 45

   39 for: FOR '(' decl_var • ';' expr ';' expr_incr_decr ')' '{' subpgrms '}'

    ';'  shift, and go to state 63


State 46

   40 while: WHILE '(' expr • ')' '{' subpgrms '}'

    ')'  shift, and go to state 64


State 47

   41 do_while: DO '{' subpgrms • '}' WHILE '(' expr ')'

    '}'  shift, and go to state 65


State 48

   10 decl_var: TYPE ID ASSIGN expr •

    $default  reduce using rule 10 (decl_var)


State 49

   13 function: TYPE FUNC ID '(' • args ')' '{' body '}'

    TYPE  shift, and go to state 66

    $default  reduce using rule 14 (args)

    args      go to state 67
    args_aux  go to state 68


State 50

   32 expr_incr_decr: ID INCREMENT •

    $default  reduce using rule 32 (expr_incr_decr)


State 51

   33 expr_incr_decr: ID DECREMENT •

    $default  reduce using rule 33 (expr_incr_decr)


State 52

   34 expr_incr_decr: INCREMENT ID •

    $default  reduce using rule 34 (expr_incr_decr)


State 53

   35 expr_incr_decr: DECREMENT ID •

    $default  reduce using rule 35 (expr_incr_decr)


State 54

   28 factor: '(' expr • ')'

    ')'  shift, and go to state 69


State 55

   20 expr: term SUM • expr

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    expr            go to state 70
    term            go to state 39
    factor          go to state 40
    expr_incr_decr  go to state 41


State 56

   21 expr: term SUBTRACTION • expr

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    expr            go to state 71
    term            go to state 39
    factor          go to state 40
    expr_incr_decr  go to state 41


State 57

   23 term: factor MULTIPLICATION • term

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    term            go to state 72
    factor          go to state 40
    expr_incr_decr  go to state 41


State 58

   26 term: factor POWER • term

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    term            go to state 73
    factor          go to state 40
    expr_incr_decr  go to state 41


State 59

   24 term: factor DIVISION • term

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    term            go to state 74
    factor          go to state 40
    expr_incr_decr  go to state 41


State 60

   25 term: factor REST • term

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    term            go to state 75
    factor          go to state 40
    expr_incr_decr  go to state 41


State 61

   12 decl_global: GLOBAL TYPE ID ASSIGN • expr

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    expr            go to state 76
    term            go to state 39
    factor          go to state 40
    expr_incr_decr  go to state 41


State 62

   11 decl_const: CONST TYPE ID ASSIGN • expr

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    expr            go to state 77
    term            go to state 39
    factor          go to state 40
    expr_incr_decr  go to state 41


State 63

   39 for: FOR '(' decl_var ';' • expr ';' expr_incr_decr ')' '{' subpgrms '}'

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    expr            go to state 78
    term            go to state 39
    factor          go to state 40
    expr_incr_decr  go to state 41


State 64

   40 while: WHILE '(' expr ')' • '{' subpgrms '}'

    '{'  shift, and go to state 79


State 65

   41 do_while: DO '{' subpgrms '}' • WHILE '(' expr ')'

    WHILE  shift, and go to state 80


State 66

   16 args_aux: TYPE • ID
   17         | TYPE • ID ',' args_aux

    ID  shift, and go to state 81


State 67

   13 function: TYPE FUNC ID '(' args • ')' '{' body '}'

    ')'  shift, and go to state 82


State 68

   15 args: args_aux •

    $default  reduce using rule 15 (args)


State 69

   28 factor: '(' expr ')' •

    $default  reduce using rule 28 (factor)


State 70

   20 expr: term SUM expr •

    $default  reduce using rule 20 (expr)


State 71

   21 expr: term SUBTRACTION expr •

    $default  reduce using rule 21 (expr)


State 72

   23 term: factor MULTIPLICATION term •

    $default  reduce using rule 23 (term)


State 73

   26 term: factor POWER term •

    $default  reduce using rule 26 (term)


State 74

   24 term: factor DIVISION term •

    $default  reduce using rule 24 (term)


State 75

   25 term: factor REST term •

    $default  reduce using rule 25 (term)


State 76

   12 decl_global: GLOBAL TYPE ID ASSIGN expr •

    $default  reduce using rule 12 (decl_global)


State 77

   11 decl_const: CONST TYPE ID ASSIGN expr •

    $default  reduce using rule 11 (decl_const)


State 78

   39 for: FOR '(' decl_var ';' expr • ';' expr_incr_decr ')' '{' subpgrms '}'

    ';'  shift, and go to state 83


State 79

   40 while: WHILE '(' expr ')' '{' • subpgrms '}'

    TYPE    shift, and go to state 1
    ID      shift, and go to state 2
    GLOBAL  shift, and go to state 3
    CONST   shift, and go to state 4
    FOR     shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7

    $default  reduce using rule 2 (subpgrms)

    subpgrms     go to state 84
    subpgrm      go to state 10
    decl_var     go to state 11
    decl_const   go to state 12
    decl_global  go to state 13
    function     go to state 14
    assign       go to state 15
    loop         go to state 16
    for          go to state 17
    while        go to state 18
    do_while     go to state 19


State 80

   41 do_while: DO '{' subpgrms '}' WHILE • '(' expr ')'

    '('  shift, and go to state 85


State 81

   16 args_aux: TYPE ID •
   17         | TYPE ID • ',' args_aux

    ','  shift, and go to state 86

    $default  reduce using rule 16 (args_aux)


State 82

   13 function: TYPE FUNC ID '(' args ')' • '{' body '}'

    '{'  shift, and go to state 87


State 83

   39 for: FOR '(' decl_var ';' expr ';' • expr_incr_decr ')' '{' subpgrms '}'

    ID         shift, and go to state 88
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36

    expr_incr_decr  go to state 89


State 84

   40 while: WHILE '(' expr ')' '{' subpgrms • '}'

    '}'  shift, and go to state 90


State 85

   41 do_while: DO '{' subpgrms '}' WHILE '(' • expr ')'

    ID         shift, and go to state 33
    LITERAL    shift, and go to state 34
    INCREMENT  shift, and go to state 35
    DECREMENT  shift, and go to state 36
    '('        shift, and go to state 37

    expr            go to state 91
    term            go to state 39
    factor          go to state 40
    expr_incr_decr  go to state 41


State 86

   17 args_aux: TYPE ID ',' • args_aux

    TYPE  shift, and go to state 66

    args_aux  go to state 92


State 87

   13 function: TYPE FUNC ID '(' args ')' '{' • body '}'

    $default  reduce using rule 18 (body)

    body  go to state 93


State 88

   32 expr_incr_decr: ID • INCREMENT
   33               | ID • DECREMENT

    INCREMENT  shift, and go to state 50
    DECREMENT  shift, and go to state 51


State 89

   39 for: FOR '(' decl_var ';' expr ';' expr_incr_decr • ')' '{' subpgrms '}'

    ')'  shift, and go to state 94


State 90

   40 while: WHILE '(' expr ')' '{' subpgrms '}' •

    $default  reduce using rule 40 (while)


State 91

   41 do_while: DO '{' subpgrms '}' WHILE '(' expr • ')'

    ')'  shift, and go to state 95


State 92

   17 args_aux: TYPE ID ',' args_aux •

    $default  reduce using rule 17 (args_aux)


State 93

   13 function: TYPE FUNC ID '(' args ')' '{' body • '}'

    '}'  shift, and go to state 96


State 94

   39 for: FOR '(' decl_var ';' expr ';' expr_incr_decr ')' • '{' subpgrms '}'

    '{'  shift, and go to state 97


State 95

   41 do_while: DO '{' subpgrms '}' WHILE '(' expr ')' •

    $default  reduce using rule 41 (do_while)


State 96

   13 function: TYPE FUNC ID '(' args ')' '{' body '}' •

    $default  reduce using rule 13 (function)


State 97

   39 for: FOR '(' decl_var ';' expr ';' expr_incr_decr ')' '{' • subpgrms '}'

    TYPE    shift, and go to state 1
    ID      shift, and go to state 2
    GLOBAL  shift, and go to state 3
    CONST   shift, and go to state 4
    FOR     shift, and go to state 5
    WHILE   shift, and go to state 6
    DO      shift, and go to state 7

    $default  reduce using rule 2 (subpgrms)

    subpgrms     go to state 98
    subpgrm      go to state 10
    decl_var     go to state 11
    decl_const   go to state 12
    decl_global  go to state 13
    function     go to state 14
    assign       go to state 15
    loop         go to state 16
    for          go to state 17
    while        go to state 18
    do_while     go to state 19


State 98

   39 for: FOR '(' decl_var ';' expr ';' expr_incr_decr ')' '{' subpgrms • '}'

    '}'  shift, and go to state 99


State 99

   39 for: FOR '(' decl_var ';' expr ';' expr_incr_decr ')' '{' subpgrms '}' •

    $default  reduce using rule 39 (for)
